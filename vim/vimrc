" Vi IMproved
set nocompatible

" plugins
source ~/git/dotfiles/vim/plugs.vim

" Backspace
set backspace=indent,eol,start 

" sets up syntax highlighting
syntax enable

" sets line numbers
set relativenumber number

" sets parenthetical highlighting to just bold
hi MatchParen cterm=bold ctermbg=Gray ctermfg=none

" sets tabs to 4 spaces
set tabstop=4 softtabstop=0 expandtab shiftwidth=4 smarttab

" makes indenting smart
set smartindent

" sets noexpandtab for Makefiles
if &ft == 'make'
    setlocal noexpandtab
    setlocal tabstop=4
endif

" enables plugins
filetype plugin on

" sets diff cursors for modes
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" persistent undo
set undofile

" sets ctrl-h to toggle line numbers
nnoremap <silent> <C-h> :set number! relativenumber! <CR>

" makes ctrl-l clear search highlighting
nnoremap <silent> <C-l> :nohlsearch<CR><C-l>

" makes lightline work
set laststatus=2
let g:lightline = {
      \ 'colorscheme': 'solarized',
      \ }
set noshowmode

" ale
let g:ale_linters = {
\    'python': ['flake8']
\}

" Ultisnips
let g:UltiSnipsUsePythonVersion = 3
let g:UltiSnipsExpandTrigger = '<C-j>'
let g:UltiSnipsJumpForwardTrigger = '<C-j>'
let g:UltiSnipsJumpBackwardTrigger = '<C-k>'

" YCM
let g:ycm_server_python_interpreter = systemlist("which python2.7")[0]
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_filepath_completion_use_working_dir = 1

" makes cmd-v paste correctly
inoremap <silent> <D-v> <ESC>:set paste<CR>"*p<ESC>:set nopaste<CR>

" delete trailing whitespace on normal mode
inoremap <silent> <Esc> <Esc>:%s/\s\+$//e<CR>

" styles folding correctly
hi Folded cterm=bold
hi Folded ctermfg=DarkCyan
hi Folded ctermbg=LightGrey

" done.
